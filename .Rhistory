impact_speed_pred0 = NA,
impact_speed_pred1 = NA,
injury_risk_pred0 = NA,
injury_risk_pred1 = NA,
crash0 = NA,
crash1 = NA,
non_crash0 = NA,
non_crash1 = NA,
max_impact0 = NA,
max_impact1 = NA,
sim_count0 = 1,
sim_count1 = 1)
# Unlabelled dataset.
unlabelled <- data %>%
left_join(grid, by = c("eoff", "acc")) %>%
filter(is.na(sim_count0)) %>%
dplyr::select( -impact_speed0, -impact_speed1, -injury_risk0, -injury_risk1) %>%
mutate(collision_prob0 = vector("numeric", 1),
impact_speed_pred0 = NA,
impact_speed_pred1 = NA,
injury_risk_pred0 = NA,
injury_risk_pred1 = NA,
crash0 = NA,
crash1 = NA,
non_crash0 = NA,
non_crash1 = NA,
max_impact0 = NA,
max_impact1 = NA,
sim_count0 = 1,
sim_count1 = 1)
unlabelled
# Unlabelled dataset.
unlabelled <- data %>%
left_join(grid, by = c("eoff", "acc")) %>%
filter(is.na(sim_count0)) %>%
dplyr::select( -impact_speed0, -impact_speed1, -injury_risk0, -injury_risk1) %>%
mutate(collision_prob0 = vector("numeric", NA),
impact_speed_pred0 = NA,
impact_speed_pred1 = NA,
injury_risk_pred0 = NA,
injury_risk_pred1 = NA,
crash0 = NA,
crash1 = NA,
non_crash0 = NA,
non_crash1 = NA,
max_impact0 = NA,
max_impact1 = NA,
sim_count0 = 1,
sim_count1 = 1)
# Unlabelled dataset.
unlabelled <- data %>%
left_join(grid, by = c("eoff", "acc")) %>%
filter(is.na(sim_count0)) %>%
dplyr::select( -impact_speed0, -impact_speed1, -injury_risk0, -injury_risk1) %>%
mutate(collision_prob0 = NA,
impact_speed_pred0 = NA,
impact_speed_pred1 = NA,
injury_risk_pred0 = NA,
injury_risk_pred1 = NA,
crash0 = NA,
crash1 = NA,
non_crash0 = NA,
non_crash1 = NA,
max_impact0 = NA,
max_impact1 = NA,
sim_count0 = 1,
sim_count1 = 1)
# Unlabelled dataset.
unlabelled <- data %>%
left_join(grid, by = c("eoff", "acc")) %>%
filter(is.na(sim_count0)) %>%
dplyr::select( -impact_speed0, -impact_speed1, -injury_risk0, -injury_risk1) %>%
mutate(collision_prob0 = NA_real,
impact_speed_pred0 = NA,
impact_speed_pred1 = NA,
injury_risk_pred0 = NA,
injury_risk_pred1 = NA,
crash0 = NA,
crash1 = NA,
non_crash0 = NA,
non_crash1 = NA,
max_impact0 = NA,
max_impact1 = NA,
sim_count0 = 1,
sim_count1 = 1)
# Unlabelled dataset.
unlabelled <- data %>%
left_join(grid, by = c("eoff", "acc")) %>%
filter(is.na(sim_count0)) %>%
dplyr::select( -impact_speed0, -impact_speed1, -injury_risk0, -injury_risk1) %>%
mutate(collision_prob0 = NA_real_,
impact_speed_pred0 = NA,
impact_speed_pred1 = NA,
injury_risk_pred0 = NA,
injury_risk_pred1 = NA,
crash0 = NA,
crash1 = NA,
non_crash0 = NA,
non_crash1 = NA,
max_impact0 = NA,
max_impact1 = NA,
sim_count0 = 1,
sim_count1 = 1)
unlabelled
# Unlabelled dataset.
unlabelled <- data %>%
left_join(grid, by = c("eoff", "acc")) %>%
filter(is.na(sim_count0)) %>%
dplyr::select( -impact_speed0, -impact_speed1, -injury_risk0, -injury_risk1) %>%
mutate(collision_prob0 = NA_real_,
impact_speed_pred0 = NA_real_,
impact_speed_pred1 = NA_real_,
injury_risk_pred0 = NA_real_,
injury_risk_pred1 = NA_real_,
crash0 = NA_integer_,
crash1 = NA_integer_,
non_crash0 = NA_integer_,
non_crash1 = NA_integer_,
max_impact0 = NA_integer_,
max_impact1 = NA_integer_,
sim_count0 = 1,
sim_count1 = 1)
unlabelled
# Update predictions.
pred0 <- update_predictions(labelled %>% filter(caseID == j),
unlabelled %>% filter(caseID == j),
yvar = "impact_speed0")
pred1 <- update_predictions(labelled %>% filter(caseID == j),
unlabelled %>% filter(caseID == j),
yvar = "impact_speed1")
ix <- which(unlabelled$caseID == j)
unlabelled[ix, c("collision_prob0", "impact_speed_pred0", "impact_speed_pred1")] <-
cbind(pred0$collision_prob, pred0$yhat, pred1$yhat)
unlabelled
View(unlabelled)
unlabelled_j <- unlabelled %>%
filter(caseID == j) %>%
muate(collision_prob0 = pred0$collision_prob,
impact_speed_pred0 = pred0$ypred,
impact_speed_pred1 = pred1$ypred,
injury_risk_pred0 = (1 + exp(-(-5.35 + 0.11 + impact_speed_pred0 / 2)))^(-1),
injury_risk_pred1 = (1 + exp(-(-5.35 + 0.11 + impact_speed_pred1 / 2)))^(-1))
unlabelled_j <- unlabelled %>%
filter(caseID == j) %>%
mutate(collision_prob0 = pred0$collision_prob,
impact_speed_pred0 = pred0$ypred,
impact_speed_pred1 = pred1$ypred,
injury_risk_pred0 = (1 + exp(-(-5.35 + 0.11 + impact_speed_pred0 / 2)))^(-1),
injury_risk_pred1 = (1 + exp(-(-5.35 + 0.11 + impact_speed_pred1 / 2)))^(-1))
pred0$ypred
unlabelled_j <- unlabelled %>%
filter(caseID == j) %>%
mutate(collision_prob0 = pred0$collision_prob,
impact_speed_pred0 = pred0$yhat,
impact_speed_pred1 = pred1$yhat,
injury_risk_pred0 = (1 + exp(-(-5.35 + 0.11 + impact_speed_pred0 / 2)))^(-1),
injury_risk_pred1 = (1 + exp(-(-5.35 + 0.11 + impact_speed_pred1 / 2)))^(-1))
unlabelled_j
View(unlabelled)
View(unlabelled_j)
labelled
View(unlabelled)
labelled
table(unlabelled$max_impact0)
table(unlabelled$max_impact1)
# If reduce_simulations_by_logic = TRUE:
# Add data-points with certain outcomes (no collision or maximal impact speed collision)
# to labelled set, remove from unlabelled set.
if ( reduce_simulations_by_logic & nrow(new_sample) > 0 ) {
# Find all known non-crashes in unlabelled dataset.
ix <- find_non_crashes(new_sample, unlabelled)
unlabelled %<>%
mutate(non_crash0 = ifelse(row_number() %in% ix$non_crashes0, 1, non_crash0),
non_crash1 = ifelse(row_number() %in% ix$non_crashes1, 1, non_crash1),
sim_count0 = ifelse(row_number() %in% ix$non_crashes0, 0, sim_count0),
sim_count1 = ifelse(row_number() %in% ix$non_crashes1, 0, sim_count1)) %>%
filter( !(row_number() %in% ix$non_crashes0) ) # Remove baseline non-crashes from pool.
# Find all known crashes in unlabelled dataset.
ix <- find_crashes(new_sample, unlabelled)
unlabelled %<>%
mutate(crash0 = ifelse(row_number() %in% ix$crashes0, 1, crash0),
crash1 = ifelse(row_number() %in% ix$crashes0, 1, crash1))
# Find all known maximal impact speed crashes in unlabelled dataset.
ix <- find_max_impact_crashes(new_sample, labelled, unlabelled)
unlabelled %<>%
mutate(max_impact0 = ifelse(row_number() %in% ix$max_impact_crashes0, 1, max_impact0),
max_impact1 = ifelse(row_number() %in% ix$max_impact_crashes1, 1, max_impact1),
sim_count0 = ifelse(row_number() %in% ix$max_impact_crashes0, 0, sim_count0),
sim_count1 = ifelse(row_number() %in% ix$max_impact_crashes1, 0, sim_count1))
} # End reduce_simulations_by_logic.
table(unlabelled$max_impact0)
table(unlabelled$max_impact1)
View(unlabelled)
unlabelled
yvar
defaultW <- getOption("warn")
labelled$y <- pull(labelled[, yvar])
if ( yvar == "impact_speed0" ) {
crash <- unlabelled$crash0
non_crash <- unlabelled$non_crash0
max_impact <- unlabelled$max_impact0
} else if ( yvar == "impact_speed1" ) {
crash <- unlabelled$crash1
non_crash <- unlabelled$non_crash1
max_impact <- unlabelled$max_impact1
}
yvar
crash
non_crash <- unlabelled$non_crash1
max_impact <- unlabelled$max_impact1
non_crash
max_impact
crash
pmax <- (pmax1 + pmax2) / 2
range(ppos)
crash
?pmax
# Combine and add predictions to unlabelled dataset.
ppos <- pmax((ppos1 + ppos2) / 2, crash, na.rm = TRUE)
ppos
max_impact
non_crash
!is.na(non_crash)
# Combine and add predictions to unlabelled dataset.
ppos <- pmax((ppos1 + ppos2) / 2, crash, na.rm = TRUE)
ppos <- ifelse( !is.na(non_crash) && non_crash, 0, ppos)
# Combine and add predictions to unlabelled dataset.
ppos <- pmax((ppos1 + ppos2) / 2, crash, na.rm = TRUE)
ppos <- ifelse( !is.na(non_crash) && non_crash, 0, ppos)
pmax <- pmax((pmax1 + pmax2) / 2, max_impact, na.rm = TRUE)
yhat <- (yhat1 + yhat2) / 2
ypred <- ppos * yhat + pmax * (ymax - yhat)
ypred[ypred <= 0] <- min(ypred[ypred > 0]) # Zero impact speed not allowed.
range(ypred)
range(ppos)
# Combine and add predictions to unlabelled dataset.
ppos <- pmax((ppos1 + ppos2) / 2, crash, na.rm = TRUE )
ppos <- ifelse( !is.na(non_crash) && non_crash, 0, ppos )
# Combine and add predictions to unlabelled dataset.
ppos <- pmax((ppos1 + ppos2) / 2, crash, na.rm = TRUE )
ppos <- ifelse( !is.na(non_crash) && non_crash, 0, ppos )
pmax <- pmax((pmax1 + pmax2) / 2, max_impact, na.rm = TRUE)
yhat <- (yhat1 + yhat2) / 2
ypred <- ppos * yhat + pmax * (ymax - yhat)
ypred[ypred <= 0] <- min(ypred[ypred > 0]) # Zero impact speed not allowed.
range(ppos)
crash
# Combine and add predictions to unlabelled dataset.
ppos <- pmax((ppos1 + ppos2) / 2, crash, na.rm = TRUE )
ppos
range(ppos)
!is.na(non_crash) && non_crash
ppos <- ifelse( !is.na(non_crash) && non_crash, 0, ppos )
ppos
# Combine and add predictions to unlabelled dataset.
ppos <- pmax((ppos1 + ppos2) / 2, crash, na.rm = TRUE )
ppos <- ifelse( !is.na(non_crash) && non_crash, rep(0, length(ppos)), ppos )
ppos
# Combine and add predictions to unlabelled dataset.
ppos <- pmax((ppos1 + ppos2) / 2, crash, na.rm = TRUE )
!is.na(non_crash) && non_crash
non_crash
!is.na(non_crash) & non_crash
rep(0, length(ppos))
ppos <- ifelse( !is.na(non_crash) & non_crash, rep(0, length(ppos)), ppos )
ppos
pmax <- pmax((pmax1 + pmax2) / 2, max_impact, na.rm = TRUE)
yhat <- (yhat1 + yhat2) / 2
ypred <- ppos * yhat + pmax * (ymax - yhat)
ypred[ypred <= 0] <- min(ypred[ypred > 0]) # Zero impact speed not allowed.
range(ppos)
range(pmax)
range(ypred)
non_crash[1] <- 1
ppos <- ifelse( !is.na(non_crash) & non_crash, rep(0, length(ppos)), ppos )
range(ppos)
# Combine and add predictions to unlabelled dataset.
ppos <- pmax((ppos1 + ppos2) / 2, crash, na.rm = TRUE )
ppos <- ifelse( !is.na(non_crash) & non_crash, rep(0, length(ppos)), ppos )
pmax <- pmax((pmax1 + pmax2) / 2, max_impact, na.rm = TRUE)
yhat <- (yhat1 + yhat2) / 2
ypred <- ppos * yhat + pmax * (ymax - yhat)
ypred[ypred <= 0] <- min(ypred[ypred > 0]) # Zero impact speed not allowed.
range(ypred)
range(ypred * sqrt(ppos))
ppos
range(ppos)
hist(ppos)
crash
crash <- NA(rep, length(crash))
crash <- rep(NA, length(crash))
crash
# Combine.
ppos <- pmax((ppos1 + ppos2) / 2, crash, na.rm = TRUE)
ppos
ppos <- ifelse( !is.na(non_crash) & non_crash, rep(0, length(ppos)), ppos)
ppos
pmax <- pmax((pmax1 + pmax2) / 2, max_impact, na.rm = TRUE)
yhat <- (yhat1 + yhat2) / 2
ypred <- ppos * yhat + pmax * (ymax - yhat)
hist(ypred)
range(ypred)
ymin
ymax
yvar
source("~/GitHub/Glance_sampling/Rscript/update_predictions.R")
# Update predictions.
pred0 <- update_predictions(labelled %>% filter(caseID == j),
unlabelled %>% filter(caseID == j),
yvar = "impact_speed0")
pred1 <- update_predictions(labelled %>% filter(caseID == j),
unlabelled %>% filter(caseID == j),
yvar = "impact_speed1")
range(pred1)
range(pred2)
range(pred0)
range(pred0$yhat)
range(pred1$yhat)
yvar
unlabelled
table(unlabe)
table(unlabelled$crash0)
table(unlabelled$crash1)
table(unlabelled$max_impact0)
table(unlabelled$max_impact1)
range(pred1$collision_prob)
range(pred0$collision_prob)
source("~/GitHub/Glance_sampling/Rscript/update_predictions.R")
if ( init == "grid" ) { # Initialise grid.
# Initial grid.
grid <- crossing(eoff = range(data$eoff), acc = range(data$acc)) %>% # Corner points.
add_row(eoff = quantile(data$eoff, 0.5, type = 1),
acc = quantile(data$acc, 0.5, type = 1)) %>% # Add centre point.
mutate(sim_count0 = 1,
sim_count1 = 1)
# Labelled dataset.
labelled <- data %>%
left_join(grid, by = c("eoff", "acc")) %>%
filter(sim_count0 == 1) %>%
mutate(sim_count1 = as.numeric((impact_speed0 != 0)),
sampling_weight = 1)
# Unlabelled dataset.
unlabelled <- data %>%
left_join(grid, by = c("eoff", "acc")) %>%
filter(is.na(sim_count0)) %>%
dplyr::select( -impact_speed0, -impact_speed1, -injury_risk0, -injury_risk1) %>%
mutate(collision_prob0_pred = NA_real_,
impact_speed0_pred = NA_real_,
impact_speed1_pred = NA_real_,
injury_risk0_pred = NA_real_,
injury_risk1_pred = NA_real_,
crash0 = NA_integer_,
crash1 = NA_integer_,
non_crash0 = NA_integer_,
non_crash1 = NA_integer_,
max_impact0 = NA_integer_,
max_impact1 = NA_integer_,
sim_count0 = 1,
sim_count1 = 1)
} else { # No initialisation, start with empty sample.
labelled <- data %>%
mutate(sim_count0 = 1,
sim_count1 = 1,
sampling_weight = 1) %>%
filter(0 == 1)
unlabelled <- data %>%
dplyr::select( -impact_speed0, -impact_speed1, -injury_risk0, -injury_risk1) %>%
mutate(collision_prob0_pred = NA,
impact_speed0_pred = NA,
impact_speed1_pred = NA,
injury_risk0_pred = NA,
injury_risk1_pred = NA,
crash0 = NA,
crash1 = NA,
non_crash0 = NA,
non_crash1 = NA,
max_impact0 = NA,
max_impact1 = NA,
sim_count0 = 1,
sim_count1 = 1)
} # End initialisation.
# Iterate
new_sample <- labelled
collision_counter <- 1
print(sprintf("Iteration %d", i))
# Find all known non-crashes in unlabelled dataset.
ix <- find_non_crashes(new_sample, unlabelled)
ix
unlabelled %<>%
mutate(non_crash0 = ifelse(row_number() %in% ix$non_crashes0, 1, non_crash0),
non_crash1 = ifelse(row_number() %in% ix$non_crashes1, 1, non_crash1),
sim_count0 = ifelse(row_number() %in% ix$non_crashes0, 0, sim_count0),
sim_count1 = ifelse(row_number() %in% ix$non_crashes1, 0, sim_count1))
# Find all known crashes in unlabelled dataset.
ix <- find_crashes(new_sample, unlabelled)
unlabelled %<>%
mutate(crash0 = ifelse(row_number() %in% ix$crashes0, 1, crash0),
crash1 = ifelse(row_number() %in% ix$crashes0, 1, crash1))
# Find all known maximal impact speed crashes in unlabelled dataset.
ix <- find_max_impact_crashes(new_sample, labelled, unlabelled)
unlabelled %<>%
mutate(max_impact0 = ifelse(row_number() %in% ix$max_impact_crashes0, 1, max_impact0),
max_impact1 = ifelse(row_number() %in% ix$max_impact_crashes1, 1, max_impact1),
sim_count0 = ifelse(row_number() %in% ix$max_impact_crashes0, 0, sim_count0),
sim_count1 = ifelse(row_number() %in% ix$max_impact_crashes1, 0, sim_count1))
j
# Update predictions.
pred0 <- update_predictions(labelled %>% filter(caseID == j),
unlabelled %>% filter(caseID == j),
yvar = "impact_speed0")
range(pred0)
sum(pred0 == 0)
sum(pred0$collision_prob == 0)
pred1 <- update_predictions(labelled %>% filter(caseID == j),
unlabelled %>% filter(caseID == j),
yvar = "impact_speed1")
unlabelled_j <- unlabelled %>%
filter(caseID == j) %>%
mutate(collision_prob0_pred = pred0$collision_prob,
impact_speed0_pred = pred0$impact_speed_pred,
impact_speed1_pred = pred1$impact_speed_pred,
injury_risk0_pred = (1 + exp(-(-5.35 + 0.11 + impact_speed0_pred / 2)))^(-1),
injury_risk1_pred = (1 + exp(-(-5.35 + 0.11 + impact_speed1_pred / 2)))^(-1))
labelled
range(unlabelled_j$injury_risk0_pred)
unlabelled_j <- unlabelled %>%
filter(caseID == j) %>%
mutate(collision_prob0_pred = pred0$collision_prob,
impact_speed0_pred = pred0$impact_speed_pred,
impact_speed1_pred = pred1$impact_speed_pred,
injury_risk0_pred = (1 + exp(-(-5.35 + 0.11 + impact_speed0_pred / 2)))^(-1),
injury_risk1_pred = (1 + exp(-(-5.35 + 0.11 + impact_speed1_pred / 2)))^(-1))
unlabelled_j <- unlabelled %>%
filter(caseID == j) %>%
mutate(collision_prob0_pred = pred0$collision_prob,
impact_speed0_pred = pred0$impact_speed_pred,
impact_speed1_pred = pred1$impact_speed_pred,
injury_risk0_pred = (1 + exp(-(5.35 + 0.11 + impact_speed0_pred / 2)))^(-1),
injury_risk1_pred = (1 + exp(-(5.35 + 0.11 + impact_speed1_pred / 2)))^(-1))
unlabelled_j <- unlabelled %>%
filter(caseID == j) %>%
mutate(collision_prob0_pred = pred0$collision_prob,
impact_speed0_pred = pred0$impact_speed_pred,
impact_speed1_pred = pred1$impact_speed_pred,
injury_risk0_pred = (1 + exp(-(-5.35 + 0.11 * impact_speed0_pred / 2)))^(-1),
injury_risk1_pred = (1 + exp(-(-5.35 + 0.11 * impact_speed1_pred / 2)))^(-1))
range(unlabelled_j$injury_risk0_pred)
labelled
unlabelled_j <- unlabelled %>%
filter(caseID == j) %>%
mutate(collision_prob0_pred = pred0$collision_prob,
impact_speed0_pred = pred0$impact_speed_pred,
impact_speed1_pred = pred1$impact_speed_pred,
injury_risk0_pred = (1 + exp(-(-5.35 + 0.11 * impact_speed0_pred / 2)))^(-1),
injury_risk1_pred = (1 + exp(-(-5.35 + 0.11 * impact_speed1_pred / 2)))^(-1),
injury_risk0_pred = ifelse(impact_speed0_pred > 0, injury_risk0_pred, 0), # Set injury risk to zero if no collision.
injury_risk1_pred = ifelse(impact_speed1_pred > 0, injury_risk1_pred, 0))
unlabelled_j
View(unlabelled)
dim(unlabelled)
View(unlabelled_j)
range(unlabelled_j$collision_prob0_pred)
sum(unlabelled_j$collision_prob0_pred == 0)
unlabelled_j %>% filter(collision_prob0_pred == 0)
source("~/GitHub/Glance_sampling/Rscript/update_predictions.R")
# Update predictions.
pred0 <- update_predictions(labelled %>% filter(caseID == j),
unlabelled %>% filter(caseID == j),
yvar = "impact_speed0")
pred1 <- update_predictions(labelled %>% filter(caseID == j),
unlabelled %>% filter(caseID == j),
yvar = "impact_speed1")
unlabelled_j <- unlabelled %>%
filter(caseID == j) %>%
mutate(collision_prob0_pred = pred0$collision_prob,
impact_speed0_pred = pred0$impact_speed_pred,
impact_speed1_pred = pred1$impact_speed_pred,
injury_risk0_pred = (1 + exp(-(-5.35 + 0.11 * impact_speed0_pred / 2)))^(-1),
injury_risk1_pred = (1 + exp(-(-5.35 + 0.11 * impact_speed1_pred / 2)))^(-1),
injury_risk0_pred = ifelse(impact_speed0_pred > 0, injury_risk0_pred, 0), # Set injury risk to zero if no collision.
injury_risk1_pred = ifelse(impact_speed1_pred > 0, injury_risk1_pred, 0))
unlabelled_j %>% filter(collision_prob0_pred == 0)
table(unlabelled_j$injury_risk0_pred)
source("~/GitHub/Glance_sampling/Rscript/update_predictions.R")
# Update predictions.
pred0 <- update_predictions(labelled %>% filter(caseID == j),
unlabelled %>% filter(caseID == j),
yvar = "impact_speed0")
pred1 <- update_predictions(labelled %>% filter(caseID == j),
unlabelled %>% filter(caseID == j),
yvar = "impact_speed1")
unlabelled_j <- unlabelled %>%
filter(caseID == j) %>%
mutate(collision_prob0_pred = pred0$collision_prob,
impact_speed0_pred = pred0$impact_speed_pred,
impact_speed1_pred = pred1$impact_speed_pred,
injury_risk0_pred = (1 + exp(-(-5.35 + 0.11 * impact_speed0_pred / 2)))^(-1),
injury_risk1_pred = (1 + exp(-(-5.35 + 0.11 * impact_speed1_pred / 2)))^(-1),
injury_risk0_pred = ifelse(impact_speed0_pred > 0, injury_risk0_pred, 0), # Set injury risk to zero if no collision.
injury_risk1_pred = ifelse(impact_speed1_pred > 0, injury_risk1_pred, 0))
unlabelled_j %>% filter(collision_prob0_pred == 0)
unlabelled_j %>% filter(collision_prob0_pred == 0) %>% View()
unlabelled_j %>% filter(crash0 == 0) %>% View()
unlabelled_j %>% filter(non_crash0 == 1) %>% View()
ix <- which(labelled$caseID == j)
ix
ix <- which(unlabelled$caseID == j)
ix
ix <- which(unlabelled$caseID == j)
unlabelled[ix, ] <- unlabelled_j
View(unlabelled)
labelled
