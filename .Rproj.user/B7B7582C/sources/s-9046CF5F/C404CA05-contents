# Check input parameters.
sampling_method <- match.arg(sampling_method)
proposal_dist <- match.arg(proposal_dist)
target <- match.arg(target)

# proposal_dist should be NA when sampling_method not equal to "importance sampling".
if ( sampling_method != "importance sampling" ) { 
  proposal_dist <- NA_character_
} 

# proposal_dist must be specified if sampling_method = "importance sampling".
if ( sampling_method == "importance sampling" & is.na(proposal_dist) ) {
  stop("Error in calculate_sampling_scheme. sampling_method = importance sampling and proposal_dist = NA not allowed.")
}

# target should be NA when sampling_method not equal to "optimised".
if ( sampling_method != "optimised" ) { 
  target <- NA_character_ 
} 

# target must be specified if sampling_method = "optimised".
if ( sampling_method == "optimised" & is.na(target) ) {
  stop("Error in calculate_sampling_scheme. sampling_method = optimised and target = NA not allowed.")
}

# num_cases should be integer between 1 and number of cases in input unlabelled set.
num_cases <- round(num_cases)
num_cases <- max(c(num_cases, 1))
num_cases <- min(c(num_cases, length(unique(unlabelled$caseID))))